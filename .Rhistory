print(book, inte)
}
}
for (book in monster_books_ac$Title) {
if (book %in% the_core){
inte <- inte + 1
print(book, inte)
}
}
for (book in monster_books_ac$Title) {
if (book %in% the_core){
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
}
}
inte <- 0
for (book in monster_books_ac$Title) {
if (book %in% the_core){
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
}
}
for (book in monster_books_ac$Title) {
if (~book %in% the_core){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
#monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
#monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
#monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
View(monster_books_woac)
# Finding all the duplicate books and their various staff lists
duplicate_books <- monster_books %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
duplicate_books <- arrange(duplicate_books, Title, `Staff List Name`) # The more appearances here, the more popular the book?
View(duplicate_books)
duplicate_books <- monster_books_woac %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
View(duplicate_books)
View(monster_books)
View(monster_books)
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
# find core books that I've already scrapped within staff lists and then getting rid of the original core row
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
# Checking the results
#duplicate_books <- monster_books_woac %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
# find core books that I've already scrapped within staff lists and then getting rid of the original core row
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
# Checking the results
duplicate_books <- monster_books_woac %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core")
the_core <- monster_books_woac %>% filter(str_detect(`Specific Genre`, "KDL Core - Adult") | str_detect(Subject, "KDL Core - Adult")) %>% pull(Title)
the_core <- unique(the_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` == "Adult Core")
for (book in monster_books_ac$Title) {
if (!(book %in% the_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
duplicate_books <- monster_books_woac %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
View(duplicate_books)
monster_book <- monster_books_woac
monster_books <- monster_books_woac
View(monster_books)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core" | "Teen Core" | "Youth Core" | "Picture Book Core")
monster_books_woac <- monster_books %>% filter(`Broad Genre` != "Adult Core" or "Teen Core" or "Youth Core" or "Picture Book Core")
monster_books_woac <- monster_books %>%  filter(!(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core")))
View(monster_books_woac)
monster_books_woc <- monster_books %>%  filter((`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core")))
View(monster_books_woc)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
monster_books_woc <- monster_books %>%  filter(!(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core")))
the_already_core <- monster_books_woc %>% filter(str_detect(`Specific Genre`, "KDL Core") | str_detect(Subject, "KDL Core")) %>% pull(Title)
View(monster_books)
monster_books_ac <- monster_books %>% filter(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core"))
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_already_core)){
print(book)
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
monster_books_woac <- rbind(monster_books_woac, monster_books_ac[monster_books_ac$Title == book, ])
}
}
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_already_core)){
print(book)
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
monster_books_woac <- rbind(monster_books_woc, monster_books_ac[monster_books_ac$Title == book, ])
}
}
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
monster_books_woc <- monster_books %>%  filter(!(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core")))
the_already_core <- monster_books_woc %>% filter(str_detect(`Specific Genre`, "KDL Core") | str_detect(Subject, "KDL Core")) %>% pull(Title)
the_already_core <- unique(the_already_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core"))
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_already_core)){
print(book)
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
monster_books_woc <- rbind(monster_books_woc, monster_books_ac[monster_books_ac$Title == book, ])
}
}
duplicate_books <- monster_books_woc %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
View(duplicate_books)
View(monster_books_woc)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
# Finding all the duplicate books and their various staff lists
duplicate_books <- monster_books %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
duplicate_books <- arrange(duplicate_books, Title, `Staff List Name`) # The more appearances here, the more popular the book?
View(duplicate_books)
for (book in the_already_core){
print(book)
}
row_to_append <- monster_books_ac[monster_books_ac$Title == "Sapiens", ]
View(row_to_append)
View(monster_books_ac)
row_to_append <- monster_books_ac[monster_books_ac$Title == "Normal People", ]
row_to_append <- monster_books_ac[monster_books_ac$Title == "Nimona", ]
View(row_to_append)
row_to_append$`Broad Genre` <- paste(row_to_append$`Broad Genre`, "Already Core", sep = ", ")
View(row_to_append)
row_to_append <- monster_books_woc[monster_books_woc$Title == "Nimona", ]
View(row_to_append)
row_to_append$`Broad Genre` <- paste(row_to_append$`Broad Genre`, "Core", sep = ", ")
View(row_to_append)
monster_books_woc[monster_books_woc$Title == "Nimona", ]
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
# find core books that I've already scrapped within staff lists and then getting rid of the original core row
monster_books_woc <- monster_books %>%  filter(!(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core")))
the_already_core <- monster_books_woc %>% filter(str_detect(`Specific Genre`, "KDL Core") | str_detect(Subject, "KDL Core")) %>% pull(Title)
the_already_core <- unique(the_already_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core"))
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_already_core)){
print(book)
inte <- inte + 1
cat("Book:", book, "| Count:", inte, "\n")
monster_books_woc <- rbind(monster_books_woc, monster_books_ac[monster_books_ac$Title == book, ])
monster_books_woc$`Broad Genre`
}
}
# Checking the results
duplicate_books <- monster_books_woc %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
monster_books <- monster_books_woc
# remove excess dfs and lists
rm(monster_books_woc, the_core, monster_books_ac, inte, duplicate_books)
View(monster_books)
see <- monster_books %>% filter(!`Broad Genre` %in% "Core")
View(see)
see <- monster_books %>% filter(!(`Broad Genre` %in% "Core"))
see <- monster_books %>% filter(!str_detect(`Broad Genre`, "Core"))
View(see)
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core"))
View(see)
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core" & !str_detect(`Broad Genre`, "Core")))
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core" & (!str_detect(`Broad Genre`, "Core"))))
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core") & !str_detect(`Broad Genre`, "Core"))
View(see)
for (book in see) {
print(book)
}
range(length(see))
length(see)
length(see)
range(length(see))
length(range(see))
range(see)
seq_along(see)
see
View(see)
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core") & !str_detect(`Broad Genre`, "Core"))
seq_along(see)
for (i in seq_along(see)) {
print(i)
}
for (i in seq_along(see)) {
print([i])
for (book in seq_along(see)) {
print(book[i])
}
for (book in seq_along(see$Title)) {
print(book[i])
}
seq_along(see$Title)
for (book in seq_along(see$Title)) {
print(book[[i]])
}
for (book in seq_along(see$Title)) {
print(book)
}
for (i in seq_along(see$Title)) {
print(i)
}
for (i in seq_along(see$Title)) {
print(see$Title[5])
}
for (i in seq_along(see$Title)) {
print(see$Title[i])
}
View(see)
see$`Broad Genre`
see$`Broad Genre` <- paste(see$`Broad Genre`, "Core", sep = " ")
View(see)
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core") & !str_detect(`Broad Genre`, "Core"))
# Append string "Smith" to the Name variable
see$`Broad Genre` <- paste(see$`Broad Genre`, "Core", sep = ",")
View(see)
see <- monster_books %>% filter(str_detect(`Subject`, "KDL Core") & !str_detect(`Broad Genre`, "Core"))
# Append string "Smith" to the Name variable
see$`Broad Genre` <- paste(see$`Broad Genre`, "Core", sep = ", ")
View(see)
View(see)
monster_books$`Broad Genre` <- monster_books %>% filter(str_detect(`Subject`, "KDL Core") & !str_detect(`Broad Genre`, "Core")) %>% paste(monster_books$`Broad Genre`, "Core", sep = ", ")
View(monster_books)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
monster_books_woc <- monster_books %>%  filter(!(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core")))
the_already_core <- monster_books_woc %>% filter(str_detect(`Specific Genre`, "KDL Core") | str_detect(Subject, "KDL Core")) %>% pull(Title)
the_already_core <- unique(the_already_core)
monster_books_ac <- monster_books %>% filter(`Broad Genre` %in% c("Adult Core", "Teen Core", "Youth Core", "Picture Book Core"))
inte <- 0
for (book in monster_books_ac$Title) {
if (!(book %in% the_already_core)){
print(book)
#inte <- inte + 1
#cat("Book:", book, "| Count:", inte, "\n")
monster_books_woc <- rbind(monster_books_woc, monster_books_ac[monster_books_ac$Title == book, ])
monster_books_woc$`Broad Genre`
}
}
# Checking the results
duplicate_books <- monster_books_woc %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
monster_books <- monster_books_woc
rm(monster_books_woc, the_core, monster_books_ac, inte, duplicate_books)
monster_books <- monster_books %>%
mutate(`Broad Genre` = if_else(str_detect(Subject, "KDL Core") & !str_detect(`Broad Genre`, "Core"),
paste(`Broad Genre`, "Core", sep = ", "), `Broad Genre`))
View(monster_books)
monster_books <- monster_books %>%
mutate(`Broad Genre` = if_else(str_detect(Subject, "KDL Core") & !str_detect(`Broad Genre`, "Core"),
paste(`Broad Genre`, "Core", sep = ", "), `Broad Genre`))
View(monster_books)
write_xlsx(monster_books, "Saved Data Files/monster_books_edited.xlsx")
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
monster_books <- monster_books %>%
distinct(Link, `Staff List Name`, .keep_all = TRUE)
monster_books <- monster_books %>%
not_distinct(Link, `Staff List Name`, .keep_all = TRUE)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
View(monster_books)
# Finding all the duplicate books and their various staff lists
duplicate_books <- monster_books %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
duplicate_books <- arrange(duplicate_books, Title, `Staff List Name`) # The more appearances here, the more popular the book?
View(duplicate_books)
# Dropping duplicate observations (same book in same staff list)
monster_books <- monster_books %>%
distinct(Link, `Staff List Name`, .keep_all = TRUE)  # columns where we drop duplicates, .keep_all function keeps all variables
#save the df back to the excel file if need be, no need to constatnly be removing the duplicate rows
#write_xlsx(monster_books, "Saved Data Files/monster_books_edited.xlsx")
# Finding all the duplicate books and their various staff lists
duplicate_books <- monster_books %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
duplicate_books <- arrange(duplicate_books, Title, `Staff List Name`) # The more appearances here, the more popular the book?
View(duplicate_books)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
# Dropping duplicate observations (same book in same staff list)
monster_books <- monster_books %>%
distinct(Link, `Staff List Name`, .keep_all = TRUE)  # columns where we drop duplicates, .keep_all function keeps all variables
#save the df back to the excel file if need be, no need to constatnly be removing the duplicate rows
#write_xlsx(monster_books, "Saved Data Files/monster_books_edited.xlsx")
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
View(monster_books)
View(monster_books)
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
# Dropping duplicate observations (same book in same staff list)
monster_books <- monster_books %>%
distinct(Link, `Staff List Name`, .keep_all = TRUE)  # columns where we drop duplicates, .keep_all function keeps all variables
#save the df back to the excel file if need be, no need to constatnly be removing the duplicate rows
#write_xlsx(monster_books, "Saved Data Files/monster_books_edited.xlsx")
# Finding all the duplicate books and their various staff lists
duplicate_books <- monster_books %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
duplicate_books <- arrange(duplicate_books, Title, `Staff List Name`) # The more appearances here, the more popular the book?
View(duplicate_books)
monster_books %>% ggplot(aes(`Item Count`)) +
geom_histogram() +
#geom_density(alpha = .2, fill = "pink2") + geom_density also a nice way to visualize distribution
scale_x_continuous(breaks = seq(0, 150, by = 10),
limits = c(0, 150)) +
labs(title = "Item Count")
monster_books %>% ggplot(aes(Holds)) +
geom_bar() +
#scale_x_continuous(breaks = seq(0, 150, by = 10),
# limits = c(0, 150)) +
labs(title = "Holds")
#boxplots w/ filtering
monster_books %>% filter(Holds < 3 &  `Item Count` < 20) %>%
ggplot(aes(`Item Count`)) +
geom_boxplot()
unique(monster_books$Link)
unique(monster_books)
sdffs <- unique(monster_books$Link)
View(duplicate_books)
monster_books <- monster_books %>%
distinct(Link, .keep_all = TRUE)
View(monster_books)
duplicate(monster_books$Link)
unique(monster_books$Link)
length(unique(monster_books$Link))
library(tidyverse)
library(readxl)
library(stringr)
library(writexl)
monster_books <- read_excel("Saved Data Files/Complete_Monster_List.xlsx")
duplicated(monster_books)
duplicated(monster_books$Title)
anyDuplicated(monster_books$Title)
# Finding all the duplicate books and their various staff lists
duplicate_books <- monster_books %>% group_by(Link) %>% filter(n()> 1) %>% summarise(Title, `Item Type`, `Staff List Name`, SL_Link, n = n())
#Counting the total number of duplicate books in our df
length(unique(duplicate_books$Link))
duplicate_books <- arrange(duplicate_books, Title, `Staff List Name`) # The more appearances here, the more popular the book?
